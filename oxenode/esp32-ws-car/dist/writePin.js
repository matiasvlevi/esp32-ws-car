var e={d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{VG:()=>u,xz:()=>s,ZP:()=>l,Tt:()=>c});const r=window.OxenodeCore,n=window.OxenodeUi,o=window.jsxRuntimeExports;function a(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,a,i,u=[],l=!0,s=!1;try{if(a=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(u.push(n.value),u.length!==t);l=!0);}catch(e){s=!0,o=e}finally{try{if(!l&&null!=r.return&&(i=r.return(),Object(i)!==i))return}finally{if(s)throw o}}return u}}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return i(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var u="Write Pin";function l(e){var t=e.node,i=a((0,r.useNodeState)(t.id,"mode",1),2),u=i[0],l=i[1],s=a((0,r.useNodeState)(t.id,"pin",12),2),c=s[0],d=s[1];return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h3",{children:"Write Pin"}),(0,o.jsx)("span",{className:"xsmall",children:"Write digital state to pins"}),(0,o.jsx)(n.NumberInput,{value:c,onChange:function(e){return d(e.target.value)}}),(0,o.jsxs)(n.Select,{value:u,onChange:function(e){return l(e.target.value)},children:[(0,o.jsx)("option",{value:"1",children:"HIGH"}),(0,o.jsx)("option",{value:"0",children:"LOW"})]}),(0,o.jsx)(n.ErrorMessage,{nodeId:t.id})]})}function s(e){var t=e.node,r=e.controller,n=e.inputs.socket,o=e.state,a=o.mode,i=o.pin,u=new Uint8Array([128,i,1&+a]);if(!n)return t.State.err="Socket is not connected...",r.update(t),r.trigger(0);n.send(u);var l=new Promise((function(e){n.onmessage=function(t){e(t)}}));return r.setCache("data",l),r.trigger(0)}var c=[r.port.input().type("trigger"),r.port.input().type("data").label("socket"),r.port.output().type("trigger")],d=t.VG,f=t.xz,p=t.ZP,g=t.Tt;export{d as Name,f as Trigger,p as default,g as ports};